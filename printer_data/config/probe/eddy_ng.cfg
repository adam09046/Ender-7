[mcu eddy]
# FOR USB: replace this with your serial port ID
# FOR CANBUS: replace this with your canbus UUID
serial: /dev/serial/by-id/usb-Klipper_rp2040_5044340310892C1C-if00
restart_method: command

[probe_eddy_ng btt_eddy]
sensor_type: btt_eddy
i2c_mcu: eddy
i2c_bus: i2c0f
x_offset: 34 # INSERT VALUE FOR YOUR PROBE POSITION
y_offset: -6.5 # INSERT VALUE FOR YOUR PROBE POSITION 

[temperature_sensor btt_eddy_mcu]
sensor_type: temperature_mcu
sensor_mcu: eddy
min_temp: 10
max_temp: 100

[temperature_sensor btt_eddy]
sensor_type: Generic 3950
sensor_pin: eddy:gpio26

[bed_mesh]
horizontal_move_z: 1
speed: 200
mesh_min: 37, 10
mesh_max: 240, 220
probe_count: 25, 25
mesh_pps: 3, 3
algorithm: bicubic
adaptive_margin: 5

[gcode_macro EDDY_TAP]
gcode:
    # Start hotend heating
    M104 S150                      ; Set hotend to 150°C (no wait)

    # Check current bed temp
    {% if printer["heater_bed"].temperature < 50 %}
        M140 S50                  ; Set bed temp to 50°C (no wait)
        M190 S50                  ; Wait for bed to reach 50°C
    {% else %}
        # Bed is already at 50°C or higher — skip waiting
    {% endif %}

    # Wait for hotend temp to reach 150°C
    M109 S150

    CLEAR_TAP
    PROBE_EDDY_NG_TAP

[gcode_macro CLEAR_TAP]
gcode:
   PROBE_EDDY_NG_SET_TAP_OFFSET VALUE=0

[gcode_macro EDDY_STATUS]
gcode:
  PROBE_EDDY_NG_STATUS

[gcode_macro SETUP]
gcode:
  PROBE_EDDY_NG_SETUP


# Uncomment this if you are using Eddy as the probe AND the homing endstop
[gcode_macro SET_Z_FROM_PROBE]
gcode:
   